// -*- C++ -*-
//
// generated by wxGlade HG on Sat May 24 09:04:54 2014
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include "PrefsDialog.h"

// begin wxGlade: ::extracode
// end wxGlade



MyDialog::MyDialog(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE)
{
    // begin wxGlade: MyDialog::MyDialog
    notebook = new wxNotebook(this, wxID_ANY);
    noteboo_pane_emerge = new wxPanel(notebook, wxID_ANY);
    noteboo_pane_dev = new wxPanel(notebook, wxID_ANY);
    noteboo_pane_editor = new wxPanel(notebook, wxID_ANY);
    noteboo_pane_general = new wxPanel(notebook, wxID_ANY);
    notebook_ext_apps = new wxPanel(notebook, wxID_ANY);
    sizer_editor_staticbox = new wxStaticBox(notebook_ext_apps, wxID_ANY, _("Editor"));
    sizer_browser_staticbox = new wxStaticBox(notebook_ext_apps, wxID_ANY, _("Web browser"));
    sizer_diff_staticbox = new wxStaticBox(notebook_ext_apps, wxID_ANY, _("Graphical diff"));
    sizer_9_staticbox = new wxStaticBox(noteboo_pane_general, wxID_ANY, _("Logging"));
    sizer_12_staticbox = new wxStaticBox(noteboo_pane_editor, wxID_ANY, _("Font"));
    sizer_cvs_staticbox = new wxStaticBox(noteboo_pane_dev, wxID_ANY, _("CVS"));
    sizer_xterm_staticbox = new wxStaticBox(notebook_ext_apps, wxID_ANY, _("xterm"));
    text_ctrl_xterm = new wxTextCtrl(notebook_ext_apps, wxID_ANY, wxEmptyString);
    label_xterm_copy = new wxStaticText(notebook_ext_apps, wxID_ANY, _("Standard xterm is recommended\n(Konsole will open new sessions)"));
    text_ctrl_editor = new wxTextCtrl(notebook_ext_apps, wxID_ANY, wxEmptyString);
    label_editor = new wxStaticText(notebook_ext_apps, wxID_ANY, _("External editor.\nIf using gvim use the -f option."));
    text_ctrl_browser = new wxTextCtrl(notebook_ext_apps, wxID_ANY, wxEmptyString);
    label_browser = new wxStaticText(notebook_ext_apps, wxID_ANY, _("Used for help system and\nchecking HOMEPAGE variable."));
    text_ctrl_diff = new wxTextCtrl(notebook_ext_apps, wxID_ANY, wxEmptyString);
    label_diff = new wxStaticText(notebook_ext_apps, wxID_ANY, _("GUI diff program.\ngtkdiff, kompare etc."));
    checkbox_strip_header = new wxCheckBox(noteboo_pane_general, wxID_ANY, _("Auto-strip CVS header on save"));
    checkbox_clear_log_window = new wxCheckBox(noteboo_pane_general, wxID_ANY, _("Clear log window on new or loading ebuild"));
    checkbox_check_syntax = new wxCheckBox(noteboo_pane_general, wxID_ANY, _("Check syntax when saving"));
    checkbox_external_control = new wxCheckBox(noteboo_pane_general, wxID_ANY, _("Allow control from vim or gvim"));
    checkbox_logfile = new wxCheckBox(noteboo_pane_general, wxID_ANY, _("Log output to file"));
    text_ctrl_logfile = new wxTextCtrl(noteboo_pane_general, wxID_ANY, wxEmptyString);
    button_font = new wxButton(noteboo_pane_editor, wxID_ANY, _("Font"));
    text_ctrl_font = new wxTextCtrl(noteboo_pane_editor, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_READONLY);
    checkbox_highlight = new wxCheckBox(noteboo_pane_editor, wxID_ANY, _("Sourcecode highlighting (color)"));
    checkbox_gentoo_highlighting = new wxCheckBox(noteboo_pane_editor, wxID_ANY, _("Highlight Gentoo keywords/functions/variables"));
    checkbox_whitespace = new wxCheckBox(noteboo_pane_editor, wxID_ANY, _("Show whitespace"));
    label_tabsize = new wxStaticText(noteboo_pane_editor, wxID_ANY, _("Spaces per tab char:"));
    text_ctrl_1 = new wxTextCtrl(noteboo_pane_editor, wxID_ANY, _("4"));
    label_cvs_root = new wxStaticText(noteboo_pane_dev, wxID_ANY, _("Enter directory for CVS root (e.g. ~/gentoo-x86)"));
    text_ctrl_cvs_root = new wxTextCtrl(noteboo_pane_dev, wxID_ANY, wxEmptyString);
    label_USE = new wxStaticText(noteboo_pane_emerge, wxID_ANY, _("USE="));
    text_ctrl_USE = new wxTextCtrl(noteboo_pane_emerge, wxID_ANY, wxEmptyString);
    label_FEATURES = new wxStaticText(noteboo_pane_emerge, wxID_ANY, _("FEATURES="));
    text_ctrl_FEATURES = new wxTextCtrl(noteboo_pane_emerge, wxID_ANY, _("noauto"));
    button_save = new wxButton(this, wx.ID_OK, wxEmptyString);
    button_cancel = new wxButton(this, wx.ID_CANCEL, _("Cancel"));

    set_properties();
    do_layout();
    // end wxGlade
}


void MyDialog::set_properties()
{
    // begin wxGlade: MyDialog::set_properties
    SetTitle(_("Preferences"));
    Hide();
    checkbox_external_control->Enable(0);
    button_save->SetDefault();
    // end wxGlade
}


void MyDialog::do_layout()
{
    // begin wxGlade: MyDialog::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_16 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_18 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_17 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_13 = new wxBoxSizer(wxVERTICAL);
    sizer_cvs_staticbox->Lower();
    wxStaticBoxSizer* sizer_cvs = new wxStaticBoxSizer(sizer_cvs_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_11 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_3 = new wxBoxSizer(wxHORIZONTAL);
    sizer_12_staticbox->Lower();
    wxStaticBoxSizer* sizer_12 = new wxStaticBoxSizer(sizer_12_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_8 = new wxBoxSizer(wxVERTICAL);
    sizer_9_staticbox->Lower();
    wxStaticBoxSizer* sizer_9 = new wxStaticBoxSizer(sizer_9_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_10 = new wxBoxSizer(wxHORIZONTAL);
    wxGridSizer* grid_sizer_ext_apps = new wxGridSizer(2, 2, 10, 10);
    sizer_diff_staticbox->Lower();
    wxStaticBoxSizer* sizer_diff = new wxStaticBoxSizer(sizer_diff_staticbox, wxVERTICAL);
    sizer_browser_staticbox->Lower();
    wxStaticBoxSizer* sizer_browser = new wxStaticBoxSizer(sizer_browser_staticbox, wxVERTICAL);
    sizer_editor_staticbox->Lower();
    wxStaticBoxSizer* sizer_editor = new wxStaticBoxSizer(sizer_editor_staticbox, wxVERTICAL);
    sizer_xterm_staticbox->Lower();
    wxStaticBoxSizer* sizer_xterm = new wxStaticBoxSizer(sizer_xterm_staticbox, wxVERTICAL);
    sizer_xterm->Add(text_ctrl_xterm, 0, wxALL|wxEXPAND, 4);
    sizer_xterm->Add(label_xterm_copy, 0, 0, 0);
    grid_sizer_ext_apps->Add(sizer_xterm, 0, wxALL|wxEXPAND, 4);
    sizer_editor->Add(text_ctrl_editor, 0, wxALL|wxEXPAND, 4);
    sizer_editor->Add(label_editor, 0, 0, 12);
    grid_sizer_ext_apps->Add(sizer_editor, 0, wxALL|wxEXPAND, 4);
    sizer_browser->Add(text_ctrl_browser, 0, wxALL|wxEXPAND, 4);
    sizer_browser->Add(label_browser, 0, 0, 0);
    grid_sizer_ext_apps->Add(sizer_browser, 0, wxALL|wxEXPAND, 4);
    sizer_diff->Add(text_ctrl_diff, 0, wxALL|wxEXPAND, 4);
    sizer_diff->Add(label_diff, 0, 0, 0);
    grid_sizer_ext_apps->Add(sizer_diff, 1, wxALL|wxEXPAND, 4);
    notebook_ext_apps->SetSizer(grid_sizer_ext_apps);
    sizer_8->Add(checkbox_strip_header, 0, wxALL, 8);
    sizer_8->Add(checkbox_clear_log_window, 0, wxALL, 8);
    sizer_8->Add(checkbox_check_syntax, 0, wxALL, 8);
    sizer_8->Add(checkbox_external_control, 0, wxALL, 8);
    sizer_10->Add(checkbox_logfile, 0, wxALL, 8);
    sizer_10->Add(text_ctrl_logfile, 1, wxALL, 8);
    sizer_9->Add(sizer_10, 1, wxEXPAND, 0);
    sizer_8->Add(sizer_9, 0, wxEXPAND, 0);
    noteboo_pane_general->SetSizer(sizer_8);
    sizer_12->Add(button_font, 0, wxALL, 8);
    sizer_12->Add(text_ctrl_font, 1, wxALL, 8);
    sizer_11->Add(sizer_12, 0, wxALL|wxEXPAND, 12);
    sizer_11->Add(checkbox_highlight, 0, wxALL|wxEXPAND, 12);
    sizer_11->Add(checkbox_gentoo_highlighting, 0, wxALL|wxEXPAND, 12);
    sizer_11->Add(checkbox_whitespace, 0, wxALL|wxEXPAND, 12);
    sizer_3->Add(label_tabsize, 0, wxLEFT|wxRIGHT, 12);
    sizer_3->Add(text_ctrl_1, 0, 0, 0);
    sizer_11->Add(sizer_3, 1, wxEXPAND, 0);
    noteboo_pane_editor->SetSizer(sizer_11);
    sizer_cvs->Add(label_cvs_root, 0, wxLEFT|wxTOP|wxEXPAND, 12);
    sizer_cvs->Add(text_ctrl_cvs_root, 0, wxALL|wxEXPAND, 12);
    sizer_13->Add(sizer_cvs, 0, wxALL|wxEXPAND, 20);
    noteboo_pane_dev->SetSizer(sizer_13);
    sizer_17->Add(label_USE, 0, wxALL, 12);
    sizer_17->Add(text_ctrl_USE, 1, wxALL, 12);
    sizer_16->Add(sizer_17, 0, wxEXPAND, 0);
    sizer_18->Add(label_FEATURES, 0, wxALL, 12);
    sizer_18->Add(text_ctrl_FEATURES, 1, wxALL, 12);
    sizer_16->Add(sizer_18, 0, wxEXPAND, 0);
    noteboo_pane_emerge->SetSizer(sizer_16);
    notebook->AddPage(notebook_ext_apps, _("External apps"));
    notebook->AddPage(noteboo_pane_general, _("General"));
    notebook->AddPage(noteboo_pane_editor, _("Editor"));
    notebook->AddPage(noteboo_pane_dev, _("Gentoo Developer"));
    notebook->AddPage(noteboo_pane_emerge, _("Emerge"));
    sizer_1->Add(notebook, 1, wxALL|wxEXPAND, 4);
    sizer_2->Add(button_save, 0, wxLEFT, 20);
    sizer_2->Add(button_cancel, 0, wxLEFT, 20);
    sizer_1->Add(sizer_2, 0, wxALL|wxEXPAND, 12);
    SetSizer(sizer_1);
    sizer_1->Fit(this);
    Layout();
    // end wxGlade
}


class MyApp: public wxApp {
public:
    bool OnInit();
protected:
    wxLocale m_locale;  // locale we'll be using
};

IMPLEMENT_APP(MyApp)

bool MyApp::OnInit()
{
    m_locale.Init();
#ifdef APP_LOCALE_DIR
    m_locale.AddCatalogLookupPathPrefix(wxT(APP_LOCALE_DIR));
#endif
    m_locale.AddCatalog(wxT(APP_CATALOG));

    wxInitAllImageHandlers();
    MyDialog* PrefsDialog = new MyDialog(NULL, wxID_ANY, wxEmptyString);
    SetTopWindow(PrefsDialog);
    PrefsDialog->Show();
    return true;
}